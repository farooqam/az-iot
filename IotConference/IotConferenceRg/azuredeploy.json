{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "namespaceName": {
      "type": "string",
      "defaultValue": "iotConference",
      "metadata": {
        "description": "Name of EventHub namespace"
      }
    },
    "eventhubSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "skuCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        4
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "MessagingUnits for premium namespace"
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "iotConferenceEh",
      "metadata": {
        "description": "Name of Event Hub"
      }
    },
    "consumerGroupName": {
      "type": "string",
      "defaultValue": "iotConferenceCg",
      "metadata": {
        "description": "Name of Consumer Group"
      }
    },
    "sharedAccessPolicyName": {
      "type": "string",
      "defaultValue": "iotConferencePol",
      "metadata": {
        "description": "Name of the Shared Access Policy apps will use"
      }
    },
    "streamAnalyticsJobName": {
      "type": "string",
      "defaultValue": "iotConferenceSaJob",
      "metadata": {
        "description": "Name of the Stream Analytics job"
      }
    },
    "streamAnalyticsJobEventHubInputName": {
      "type": "string",
      "defaultValue": "iotConferenceEhInput",
      "metadata": {
        "description": "Name of the Stream Analytics job's Event Hub input"
      }
    },
    "streamAnalyticsJobDataLakeOutputName": {
      "type": "string",
      "defaultValue": "iotConferenceDlOutput",
      "metadata": {
        "description": "Name of the Stream Analytics job's Data Lake output"
      }
    },
    "dataLakeAccountName": {
      "type": "string",
      "defaultValue": "iotconference",
      "metadata": {
        "description": "Name of the Data Lake storage account"
      }
    },
    "dataLakeAccountRegion": {
      "type": "string",
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Location of the Data Lake storage account"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "f59645ca-7c1b-40fe-870d-96cd8328eb83"
    },
    "streamingUnits": {
      "type": "int",
      "defaultValue": 1
    },
    "dataLakeAnalyticsAccountName": {
      "type": "string",
      "defaultValue": "iotconference"
    },
    "dataLakeAnalyticsAccountRegion": {
      "type": "string",
      "defaultValue": "eastus2"
    }
  },
    "variables": {
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName'), variables('defaultSASKeyName'))]",
        "iotConferenceAuthRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName'), parameters('sharedAccessPolicyName'))]"

    },
  "resources": [
    {
      "apiVersion": "2017-04-01",
      "name": "[parameters('namespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('eventhubSku')]",
        "tier": "[parameters('eventhubSku')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "tags": {
        "tag1": "value1",
        "tag2": "value2"
      },
      "properties": {},
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'))]"
          ],
          "properties": {},
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "[parameters('consumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {
                "userMetadata": "User Metadata goes here"
              }
            },
            {
              "apiVersion": "2017-04-01",
              "name": null,
              "name": "[concat(parameters('namespaceName'), '/', parameters('sharedAccessPolicyName'))]",
              "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
              "properties": {
                "rights": [
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "[parameters('eventHubName')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "location": "[resourceGroup().location]",
      "name": "[parameters('streamAnalyticsJobName')]",
      "scale": null,
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.0",
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[parameters('streamingUnits')]",
            "query": "[concat('SELECT * INTO ', parameters('streamAnalyticsJobDataLakeOutputName'), ' FROM ', parameters('streamAnalyticsJobEventHubInputName'))]"
          }
        }
      },
      "dependsOn": [
        "[parameters('eventHubName')]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "name": "[concat(parameters('streamAnalyticsJobName'), '/', parameters('streamAnalyticsJobEventHubInputName'))]",
      "apiVersion": "2016-03-01",
      "scale": null,
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.ServiceBus/EventHub",
          "properties": {
            "eventHubName": "[parameters('eventHubName')]",
            "serviceBusNamespace": "[parameters('namespaceName')]",
            "sharedAccessPolicyName": "[parameters('sharedAccessPolicyName')]",
            "sharedAccessPolicyKey": "[listkeys(variables('iotConferenceAuthRuleResourceId'), '2017-04-01').primaryKey]"

          }
        },
        "compression": {
          "type": "None"
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        },
        "etag": "de38eb32-0dad-4585-8b7a-368a8eab417d"
      },
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
      ]
    },
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "name": "[parameters('dataLakeAccountName')]",
      "apiVersion": "2016-11-01",
      "location": "[parameters('dataLakeAccountRegion')]",
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "name": "[concat(parameters('streamAnalyticsJobName'), '/', parameters('streamAnalyticsJobDataLakeOutputName'))]",
      "apiVersion": "2016-03-01",
      "scale": null,
      "properties": {
        "datasource": {
          "type": "Microsoft.DataLake/Accounts",
          "properties": {
            "filePathPrefix": "iotconference/events/{date}/{time}",
            "tenantId": "[parameters('tenantId')]",
            "accountName": "[parameters('dataLakeAccountName')]",
            "dateFormat": "yyyy/MM/dd",
            "timeFormat": "HH",
            "refreshToken": "click Authorize in the Azure portal",
            "accessToken": "click Authorize in the Azure portal",
            "tokenUserPrincipalName": "farooq_am_starbucks@hotmail.com",
            "tokenUserDisplayName": "Farooq Mahmud"
          }
        },
        "serialization": {
            "type": "Avro",
            "properties": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]",
        "[resourceId('Microsoft.DataLakeStore/accounts', parameters('dataLakeAccountName'))]"

      ]
    },
    {
      "apiVersion": "2016-11-01",
      "name": "[parameters('dataLakeAnalyticsAccountName')]",
      "location": "[parameters('dataLakeAnalyticsAccountRegion')]",
      "type": "Microsoft.DataLakeAnalytics/accounts",
      "properties": {
        "defaultDataLakeStoreAccount": "[parameters('dataLakeAccountName')]",
        "dataLakeStoreAccounts": [
          {
            "name": "[parameters('dataLakeAccountName')]"
          }
        ],
        "newTier": "Consumption"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataLakeStore/accounts', parameters('dataLakeAccountName'))]"

      ]
    }

  ],
    "outputs": {
        "NamespaceConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('iotConferenceAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
        },
        "SharedAccessPolicyPrimaryKey": {
            "type": "string",
            "value": "[listkeys(variables('iotConferenceAuthRuleResourceId'), '2017-04-01').primaryKey]"
        }
    }
}